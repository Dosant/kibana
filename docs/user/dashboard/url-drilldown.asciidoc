[[url-drilldown]]
=== URL Drilldown

The URL drilldown allows you to navigate from a dashboard to an internal or external URL.
The destination URL can be dynamic, depending on the dashboard context or user’s interaction with a visualization.

For example, you might have a dashboard that shows data from a Github repository.
You can create a drilldown that navigates from this dashboard to Github.
Refer to the <<try-it, Try it section>> for instructions on how to create this drilldown.

[role="screenshot"]
image:images/url_drilldown_go_to_github.gif[Drilldown on pie chart that navigates to Github]

NOTE: URL drilldown is available with the https://www.elastic.co/subscriptions[Gold subscription] and higher.

[float]
[[try-it]]
==== Try it: Create a URL drilldown

This example shows how to create the "Show on Github" drilldown shown earlier in this doc.

. Add the <<gs-get-data-into-kibana, sample web logs>> data set.
. Open the `[Logs] Web traffic` dashboard. This isn’t data from Github, but it should work for demonstration purposes.
. In the dashboard menu bar, click *Edit*.
. In `[Logs] Visitors by OS`, open the panel menu, and then select *Create drilldown*.
. Give the drilldown a name: *Show on Github*.
. Select a drilldown action: *Go to URL*.
[role="screenshot"]
image:images/url_drilldown_pick_an_action.png[Action picker]
. Enter a URL template: 
+
```
https://github.com/elastic/kibana/issues?q=is:issue+is:open+{{event.value}}
```
+
This example URL navigates to {kib} issues on Github. `{{event.value}}` will be substituted with a value associated with a clicked pie slice. Please note, that in _preview_ `{{event.value}}` is substituted with <<values-in-preview, dummy>> value.
[role="screenshot"]
image:images/url_drilldown_url_template.png[URL template input]
. Click *Create drilldown*.
. Save the dashboard.
+
If you don’t save the drilldown, and then navigate away, the drilldown is lost.

. In `[Logs] Visitors by OS`, click any slice of the pie, and then select the drilldown *Show on Github*.
+
[role="screenshot"]
image:images/url_drilldown_popup.png[URL drilldown popup]

You are navigated to the issue list in the {kib} repository. Verify that value from a pie slice you’ve clicked on is carried over to Github.

[role="screenshot"]
image:images/url_drilldown_github.png[Github]

[float]
[[trigger-picker]]
==== Picking a trigger for a URL drilldown

Some panels support multiple user interactions (called triggers) for which you can configure a URL drilldown. The list of supported variables in the URL template depends on the trigger you selected.
In the preceding <<try-it, example>>, you configured a URL drilldown on a pie chart. The only trigger that pie chart supports is clicking on a pie slice, so you didn’t have to pick a trigger.

However, the sample *[Logs] Unique Visitors vs. Average Bytes* chart supports both clicking on a data point and selecting a range. When you create a URL drilldown for this  chart, you have the following choices:

[role="screenshot"]
image:images/url_drilldown_trigger_picker.png[Trigger picker: single click and range selection]

Variables in the URL template differ per trigger. 
For example, "single click" has `{{event.value}}` and "range selection" has `{{event.from}}` and `{{event.to}}`. 
You can create multiple URL drilldowns per panel and attach them to different triggers.

[float]
[[templating]]
==== URL templating language

The URL template input uses Handlebars — a simple templating language. Handlebars templates look like regular text with embedded Handlebars expressions.

```
https://github.com/elastic/kibana/issues?q={{event.value}}
```

A Handlebars expression is a `{{`, some contents, followed by a `}}`. When the drilldown is executed, these expressions are replaced by values from the dashboard and interaction context.

Refer to Handlebars https://handlebarsjs.com/guide/expressions.html#expressions[documentation] to learn about advanced use cases.

[[helpers]]
In addition to https://handlebarsjs.com/guide/builtin-helpers.html[built-in] Handlebars helpers, you can use the following custom helpers:


|===
|Helper |Use case |Examples

|json
|Serialize variables in JSON format
|`{{json event}}` +
`{{json event.key event.value}}` +
`{{json filters=context.panel.filters}}`


|rison
|Serialize context variables in https://github.com/w33ble/rison-node[rison] format. Rison is a common format for {kib} apps for storing state in the URL.
|`{{rison event}}` +
`{{rison event.key event.value}}` +
`{{rison filters=context.panel.filters}}` +


|date
|Format dates. Supports relative dates expressions (for example,  "now-15d"). Refer to the https://momentjs.com/docs/#/displaying/format/[moment] docs for different formatting options.
|`{{ date event.from “YYYY MM DD”}}` + 
`{{date “now-15”}}`
|===


[float]
[[variables]]
==== URL template variables

The URL drilldown template has three sources for variables:

. *Global* static variables that don’t change depending on the  place where URL drilldown is used or which user interaction executed the drilldown. For example: `{{kibanaUrl}}`.
. *Context* variables that change depending on where the drilldown is created and used. These variables are extracted from a context of a panel on a dashboard. Example: ``{{context.panel.filters}}`` which gives access to filters that applied to the current panel.
. *Event* variables that depend on the trigger context. These variables are dynamically extracted from the interaction context when the drilldown is executed.

[[values-in-preview]]
A subtle but important difference between *context* and *event* variables is that *context* variables use real values in previews when creating a URL drilldown. 
For example, `{{context.panel.filters}}` are previewed with the current filters that applied to a panel. 
*Event* variables are extracted during drilldown execution from a user interaction with a panel (for example, from a pie slice that the user clicked on).

Because there is no user interaction with a panel in preview, there is no interaction context to use in a preview.
To work around this, {kib} provides a sample interaction that relies on a picked <<trigger-picker, trigger>>.
So in a preview, you might notice that `{{event.value}}` is replaced with `{{event.value}}` instead of with a sample from your data.
Such previews can help you make sure that the structure of your URL template is valid.
However, to ensure that the configured URL drilldown works as expected with your data, you have to retest the drilldown through the panel after saving a dashboard.

You can access the full list of variables available for the current panel and selected trigger by clicking *Add variable* in the top-right corner of a URL template input.

[float]
[[variables-reference]]
==== Variables reference


|===
|Source |Variable |Description

|*Global*
|
| Static variables that don’t change depending on the place where a URL drilldown is used or which user interaction executed the drilldown.

|
| kibanaUrl
| {kib} base URL. Useful for creating URL drilldowns that navigate within {kib}.

| *Context*
| 
| Variables might change depending on where the drilldown is created and used.

|
| context.panel
| Context provided by current dashboard panel.

|
| context.panel.id
| ID of a panel.

|
| context.panel.title
| Title of a panel.

| 
| context.panel.filters
| List of {kib} filters applied to a panel. +  
_Tip: Use in combination with <<helpers, rison>> helper for internal {kib} navigations with carrying over current filters._

| 
| context.panel.query.query
| Current query string.

| 
| context.panel.query.lang
| Current query language.

| 
| context.panel.timeRange.from +
context.panel.timeRange.to
| Current time picker values. +
_Tip: Use in combination with <<helpers, date>> helper to format date_.

| 
| context.panel.timeRange.indexPatternId +
context.panel.timeRange.indexPatternIds 
|Index pattern ids used by a panel. 

|
| context.panel.savedObjectId
| ID of saved object behind a panel.

| *Event*
| 
| Variables that depend on a trigger context. These variables are dynamically extracted from the interaction context when the drilldown is executed.

| *Single click* trigger
| 
| Variables available when *single click* trigger is used. 

|
| event.value
| Value behind clicked data point.

|
| event.key
| Field name behind clicked data point

|
| event.negate
| If drilldown executed is a "negative" context. (for example, a "filter-out" loop clicked...)

| *Range selection* trigger
|
| Variables available when *range selection* trigger is used.

|
| event.from +
event.to
| `from` and `to` values of selected range. Depending on your data, could be either a date or number. +
_Tip: Consider using <<helpers, date>> helper for date formatting._

|
| event.key
| Aggregation field behind the selected range, if available.

|===
